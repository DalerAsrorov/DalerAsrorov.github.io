{"version":3,"sources":["webpack:///./src/pages/tags.tsx"],"names":["pageQuery","TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","description","keywords","pathname","location","map","tag","key","fieldValue","to","kebabCase","totalCount"],"mappings":"4FAAA,sIAyCaA,EAAY,aAgBVC,UAhDT,SAAC,GAOI,QANTC,KACuBC,EAKd,EALPC,kBAAqBD,MAEHE,EAGX,EAJPC,KACEC,aAAgBF,MAIpB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEA,MAAOA,EACPG,YAAY,uCACZC,SAAUN,EACVO,SAAUC,SAASD,WAErB,uBACE,8BACA,sBACGP,EAAMS,KAAI,SAACC,GAAD,OACT,kBAAIC,IAAKD,EAAIE,YACX,YAAC,IAAD,CAAMC,GAAE,SAAWC,IAAUJ,EAAIE,YAAzB,KACLF,EAAIE,WADP,KACqBF,EAAIK,WADzB","file":"component---src-pages-tags-tsx-a5621949b60e0283fa3f.js","sourcesContent":["import { graphql, Link, PageProps } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport React from 'react';\nimport Layout from '../components/layout';\nimport { SEO } from '../components/seo';\n\nconst TagsPage: React.FC<PageProps<{\n  allMarkdownRemark: any;\n  site: any;\n}>> = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}: any) => {\n  return (\n    <Layout>\n      <SEO\n        title={title}\n        description=\"List of all tags in dalerasrorov.com\"\n        keywords={group}\n        pathname={location.pathname}\n      />\n      <div>\n        <h1>Tags</h1>\n        <ul>\n          {group.map((tag: { fieldValue: string; totalCount: number }) => (\n            <li key={tag.fieldValue}>\n              <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                {tag.fieldValue} ({tag.totalCount})\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport default TagsPage;\n"],"sourceRoot":""}