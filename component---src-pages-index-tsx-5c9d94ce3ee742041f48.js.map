{"version":3,"sources":["webpack:///./src/components/tags-list.tsx","webpack:///./src/components/blog-post-preview.tsx","webpack:///./src/components/posts-list-preview.tsx","webpack:///./src/pages/index.tsx"],"names":["TagsList","tags","css","map","tag","rhythm","key","to","kebabCase","BlogPostPreview","props","slug","title","date","excerpt","PostsListPreview","query","render","data","totalCount","allMarkdownRemark","pageHeader","edges","node","id","fields","frontmatter","Home"],"mappings":"6FAAA,2G,8CAMaA,EAAyC,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACvD,OACE,kBAAIC,IAAG,GACJD,EAAKE,KAAI,SAAAC,GAAG,OACX,kBACEF,IAAKA,YAAF,2BAEeG,YAAO,EAAI,GAF1B,KAIHC,IAAKF,GAEL,YAAC,IAAD,CAAMG,GAAE,SAAWC,IAAUJ,GAArB,KAAR,IAAwCA,U,oCCjBlD,kG,wJAcaK,EAAmD,SAAAC,GAC9D,OACE,mBACER,IAAG,GAIH,YAAC,IAAD,CACEK,GAAIG,EAAMC,KACVT,IAAG,GAKH,kBACEA,IAAKA,YAAF,iBACgBG,YAAO,IADvB,6BAOFK,EAAME,MAAO,IACd,oBACEV,IAAG,GADL,KAKKQ,EAAMG,OAGb,iBACEX,IAAKA,YAAF,iBACgBG,YAAO,EAAI,GAD3B,MAIFK,EAAMI,UAGX,YAAC,IAAD,CAAUb,KAAMS,EAAMT,U,42CCObc,EAtDU,kBACvB,YAAC,IAAD,CACEC,MAAK,aAqBLC,OAAQ,SAAAC,GAAQ,IACNC,EAAeD,EAAKE,kBAApBD,WACFE,EAAgBF,EAAN,SACC,IAAfA,EAAmB,GAAK,KADV,SAIhB,OACE,8BACE,kBACEjB,IAAG,GAIFmB,GAEFH,EAAKE,kBAAkBE,MAAMnB,KAAI,gBAAGoB,EAAH,EAAGA,KAAH,OAChC,YAAC,IAAD,CACEjB,IAAKiB,EAAKC,GACVb,KAAMY,EAAKE,OAAOd,KAClBC,MAAOW,EAAKG,YAAYd,MACxBC,KAAMU,EAAKG,YAAYb,KACvBZ,KAAMsB,EAAKG,YAAYzB,KACvBa,QAASS,EAAKT,eA5C1B,U,YCMaa,UAPF,SAACjB,GAAD,OACX,YAAC,IAAD,KACE,YAAC,IAAD,MACA,YAAC,EAAD","file":"component---src-pages-index-tsx-5c9d94ce3ee742041f48.js","sourcesContent":["import { css } from '@emotion/core';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport React from 'react';\nimport { rhythm } from '../utils/typography';\n\nexport const TagsList: React.FC<{ tags: string[] }> = ({ tags }) => {\n  return (\n    <ul css={css('list-style: none;')}>\n      {tags.map(tag => (\n        <li\n          css={css`\n            float: left;\n            margin: 0 0 0 ${rhythm(1 / 4)};\n          `}\n          key={tag}\n        >\n          <Link to={`/tags/${kebabCase(tag)}/`}>#{tag}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { css } from '@emotion/core';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport { rhythm } from '../utils/typography';\nimport { TagsList } from './tags-list';\n\nexport interface IBlogPostPreviewProps {\n  slug: string;\n  title: string;\n  date: Date | string;\n  excerpt: string;\n  tags: string[];\n}\n\nexport const BlogPostPreview: React.FC<IBlogPostPreviewProps> = props => {\n  return (\n    <div\n      css={css`\n        display: inline-block;\n      `}\n    >\n      <Link\n        to={props.slug}\n        css={css`\n          text-decoration: none;\n          color: inherit;\n        `}\n      >\n        <h3\n          css={css`\n            margin-bottom: ${rhythm(1 / 2)};\n            &:hover {\n              color: #1ca086;\n            }\n          `}\n        >\n          {props.title}{' '}\n          <span\n            css={css`\n              color: #bbb;\n            `}\n          >\n            â€” {props.date}\n          </span>\n        </h3>\n        <p\n          css={css`\n            margin-bottom: ${rhythm(1 / 4)};\n          `}\n        >\n          {props.excerpt}\n        </p>\n      </Link>\n      <TagsList tags={props.tags} />\n    </div>\n  );\n};\n","import { css } from '@emotion/core';\nimport { graphql, Link, StaticQuery } from 'gatsby';\nimport React from 'react';\nimport { rhythm } from '../utils/typography';\nimport { BlogPostPreview } from './blog-post-preview';\n\nconst PostsListPreview = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n          totalCount\n          edges {\n            node {\n              id\n              frontmatter {\n                title\n                date(formatString: \"DD MMMM, YYYY\")\n                tags\n              }\n              fields {\n                slug\n              }\n              excerpt\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { totalCount } = data.allMarkdownRemark;\n      const pageHeader = `${totalCount} post${\n        totalCount === 1 ? '' : 's'\n      } total`;\n\n      return (\n        <>\n          <h5\n            css={css`\n              margin-bottom: 0;\n            `}\n          >\n            {pageHeader}\n          </h5>\n          {data.allMarkdownRemark.edges.map(({ node }: any) => (\n            <BlogPostPreview\n              key={node.id}\n              slug={node.fields.slug}\n              title={node.frontmatter.title}\n              date={node.frontmatter.date}\n              tags={node.frontmatter.tags}\n              excerpt={node.excerpt}\n            />\n          ))}\n        </>\n      );\n    }}\n  />\n);\n\nexport default PostsListPreview;\n","import { PageProps } from 'gatsby'\nimport * as React from 'react'\nimport Layout from '../components/layout'\nimport PostsListPreview from '../components/posts-list-preview'\nimport { SEO } from '../components/seo'\n\nconst Home = (props: PageProps) => (\n  <Layout>\n    <SEO />\n    <PostsListPreview />\n  </Layout>\n)\n\nexport default Home\n"],"sourceRoot":""}